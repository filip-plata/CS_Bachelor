"""
Django settings for bitjobs project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import warnings

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jxmu@qw*@+oyh0w$8uei1flru!djvtaja3gk6e*fd6l69%$)fy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django_nose',
    'cc',
    'djmoney',
    'bootstrap3',
    'registration',
    'fontawesome',
    'rest_framework',
    'registration_api',
    'compressor',
    'static_precompiler',
    'webpack_loader',
    'taggit',
    'taggit_serializer',
    'base',
    'moneyflow',
    'bargainflow',
    'opinions',
]

SITE_ID = 1

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bitjobs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bitjobs.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/staticfiles/'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = [
    os.path.join(PROJECT_ROOT, 'static'),
]

WHITENOISE_ROOT = os.path.join(BASE_DIR, 'staticfiles', 'root')

STATIC_PRECOMPILER_USE_CACHE = False

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'bundles/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'),
    }
}

REGISTRATION_API_ACTIVATION_SUCCESS_URL = '/'

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'static_precompiler.finders.StaticPrecompilerFinder',
    'compressor.finders.CompressorFinder',
]

TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'

NOSE_ARGS = [
    '--with-coverage',
    '--cover-package=bargainflow,moneyflow,opinions',
]

STATIC_PRECOMPILER_COMPILERS = (
    ('static_precompiler.compilers.SCSS', {
        "sourcemap_enabled": False,
        "compass_enabled": True,
        "precision": 8,
        "output_style": "compressed"
    }),
)

COMPRESS_ROOT = STATIC_ROOT
COMPRESS_ENABLED = True
COMPRESS_OFFLINE = False

# Django registration settings

ACCOUNT_ACTIVATION_DAYS = 7
LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/accounts/login/'

LOGOUT_REDIRECT_URL = '/'

REGISTRATION_AUTO_LOGIN = True
REGISTRATION_OPEN = True

# end django registration

# django email settings

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = 'localhost'
EMAIL_PORT = 1025

# end django email

# internationalization settings

LANGUAGES = [
    ('pl', 'Polski'),
    ('en', 'English'),
]

TIME_ZONE = 'Europe/Warsaw'
LANGUAGE_CODE = 'pl'

LOCALE_PATHS = [
    'locale',
    os.path.join(BASE_DIR, 'locale'),
]

# end internationalization settings


if os.environ.get('heroku') is not None:
    import dj_database_url

    DATABASES['default'] = dj_database_url.config()
    DEBUG = False
    ALLOWED_HOSTS = ['*']
    SECRET_KEY = os.environ.get('secret_key')

    EMAIL_USE_TLS = True
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = "smtp.gmail.com"
    EMAIL_HOST_USER = "thebitjobs@gmail.com"
    EMAIL_HOST_PASSWORD = os.environ.get('gmail-password')
    EMAIL_PORT = 587

    STATIC_PRECOMPILER_USE_CACHE = True

    STATICFILES_DIRS = []
else:
    try:
        from .local_settings import *
    except:
        warnings.warn("local_settings.py file is not present. It "
                      "could contain database settings for postgres")

# django-money configuration
import moneyed
from moneyed.localization import _FORMATTER
from decimal import ROUND_HALF_EVEN

LTC = moneyed.add_currency('LTC', '068', 'Litecoin', ())
_FORMATTER.add_sign_definition('default', LTC, prefix=u'LTC ')

CURRENCIES = ['LTC']
CURRENCIES_CHOICE = [('LTC', 'LTC')]

AUTOCOMPLETE_LENGTH = 5
