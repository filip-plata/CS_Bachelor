rotate z : Complex ; Complex := z * 1i;;

map x : Complex -> Complex, fs : [Complex] ; [Complex] :=
  case fs of
  | (a:(b)) -> (x a) : (map x b) |
  | [] -> [] ;;

main := map rotate [2i, (toComplex 2) + 1i, (toComplex (0 - 1)) + 2i];;

# Expected: [-2 + (0i), -1 + (2i), -2 + (-1i)] : [Complex]
